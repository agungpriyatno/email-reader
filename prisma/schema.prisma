// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String   @db.VarChar(255)
  email     String   @unique @db.VarChar(255)
  hash      String   @db.VarChar(255)
  updatedAt DateTime @updatedAt @map("updated_at")
  createdAt DateTime @default(now()) @map("created_at")

  @@map("users")
}

model Imap {
  id      String       @id @default(cuid())
  user    String       @unique @db.VarChar(255)
  clients ClientImap[]

  @@map("imaps")
}

model Client {
  id        String       @id @default(cuid())
  name      String       @db.VarChar(255)
  email     String       @unique @db.VarChar(255)
  hash      String       @db.VarChar(255)
  isActive  Boolean      @default(true) @map("is_active") @db.Boolean
  updatedAt DateTime     @updatedAt @map("updated_at")
  createdAt DateTime     @default(now()) @map("created_at")
  imaps     ClientImap[]

  @@map("clients")
}

model ClientImap {
  clientId    String   @map("client_id")
  imapId      String   @map("imap_id")
  expiredTime DateTime
  client      Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
  imap        Imap     @relation(fields: [imapId], references: [id], onDelete: Cascade)

  @@id([clientId, imapId])
  @@map("client_imaps")
}

model Token {
  id           String   @id
  accessToken  String   @map("access_token")
  refreshToken String   @map("refresh_token")
  tokenType    String   @map("token_type")
  scope        String
  expiryDate   DateTime @map("expiry_date")

  @@map("tokens")
}

model Filter {
  id        String   @id @default(cuid())
  name      String   @db.Text
  updatedAt DateTime @updatedAt @map("updated_at")
  createdAt DateTime @default(now()) @map("created_at")

  @@map("filters")
}
